import sys,os,asyncio,time,json
from IPython import get_ipython as gi
from IPython.utils.capture import capture_output
f=["/mnt/data/.cache","/mnt/data/.scripts","/mnt/data/.scripts/modules"]
os.environ['NUMBA_CACHE_DIR'],os.environ['PYTHONASYNCIODEBUG']=f[0],'1'
for d in f: os.makedirs(d,exist_ok=True)
for i in [f"{f[1]}/__init__.py",f"{f[2]}/__init__.py"]: open(i,'w').close()
if f[1] not in sys.path: sys.path.append(f[1])
class functions: pass
_fc,_fr,_res={},{},{}
async def _run(code):
 ip=gi()
 await asyncio.sleep(0)
 with capture_output() as captured:
  _res['_']=(captured,ip.run_cell(code))
def _rca(code):
 asyncio.create_task(_run(code))
def _wfc(plugin,func,args):
 _fcid=random.randint(0,1000000000)
 _fc[_fcid]=json.dumps({'plugin': plugin,'func': func,'args':json.dumps(args)})
 return _fcid
def _pfr(_k):
 while True:
  if _k in _fr:
   r=_fr[_k]
   del _fr[_k]
   return r
  time.sleep(1)